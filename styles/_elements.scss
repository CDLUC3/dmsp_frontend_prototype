@import "form/text";
@import "form/button";
@import "form/label";
@import "form/select";
@import "form/radio";
@import "form/checkbox";
@import "form/switch";
@import "form/tabs";


// Link
.react-aria-Link {
  color: var(--link-color);
  font-size: 18px;
  transition: all 200ms;
  text-decoration: underline;
  cursor: pointer;
  outline: none;
  position: relative;

  &[data-hovered] {
    text-decoration-style: wavy;
  }

  &[data-pressed] {
    color: var(--link-color-pressed);
  }

  &[data-focus-visible]:after {
    content: '';
    position: absolute;
    inset: -3px -6px;
    border-radius: 6px;
    border: 2px solid var(--focus-ring-color);
  }
}

// Toggle Button
.react-aria-ToggleButton {
  color: var(--button-foreground);
  background: var(--button-background);
  border: 1px solid var(--border-color);
  forced-color-adjust: none;
  border-radius: 4px;
  appearance: none;
  vertical-align: middle;
  font-size: 1rem;
  text-align: center;
  margin: 0;
  outline: none;
  padding: 6px 10px;
  cursor: pointer;

  &[data-pressed] {
    box-shadow: inset 0 1px 2px rgb(0 0 0 / 0.1);
    background: var(--button-background-pressed);
    border-color: var(--border-color-pressed);
  }

  &[data-selected] {
    background: var(--highlight-background);
    border-color: var(--highlight-background);
    color: var(--highlight-foreground);

    &[data-pressed] {
      color: var(--highlight-foreground-pressed);
      background: var(--highlight-background-pressed);
      border-color: var(--highlight-background-pressed);
    }
  }

  &[data-focus-visible] {
    outline: 2px solid var(--focus-ring-color);
    outline-offset: 2px;
  }
}

// Forms

.react-aria-Button {
  @include device(sm) {
    margin-top: var(--fs-4xl);
  }
  margin-top: var(--fs-xl);
}

// Popover
.react-aria-Popover {
  --background-color: var(--overlay-background);

  border: 1px solid var(--border-color);
  box-shadow: 0 8px 20px rgba(0 0 0 / 0.1);
  border-radius: 6px;
  background: var(--background-color);
  color: var(--text-color);
  outline: none;
  max-width: 250px;

  .react-aria-OverlayArrow svg {
    display: block;
    fill: var(--background-color);
    stroke: var(--border-color);
    stroke-width: 1px;
  }

  &[data-placement=top] {
    --origin: translateY(8px);

    &:has(.react-aria-OverlayArrow) {
      margin-bottom: 6px;
    }
  }

  &[data-placement=bottom] {
    --origin: translateY(-8px);

    &:has(.react-aria-OverlayArrow) {
      margin-top: 6px;
    }

    .react-aria-OverlayArrow svg {
      transform: rotate(180deg);
    }
  }

  &[data-placement=right] {
    --origin: translateX(-8px);

    &:has(.react-aria-OverlayArrow) {
      margin-left: 6px;
    }

    .react-aria-OverlayArrow svg {
      transform: rotate(90deg);
    }
  }

  &[data-placement=left] {
    --origin: translateX(8px);

    &:has(.react-aria-OverlayArrow) {
      margin-right: 6px;
    }

    .react-aria-OverlayArrow svg {
      transform: rotate(-90deg);
    }
  }

  &[data-entering] {
    animation: popover-slide 200ms;
  }

  &[data-exiting] {
    animation: popover-slide 200ms reverse ease-in;
  }
}

@keyframes popover-slide {
  from {
    transform: var(--origin);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}


// Toolbar
.react-aria-Toolbar {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;

  &[data-orientation=horizontal] {
    flex-direction: row;
  }

  .react-aria-Group {
    display: contents;
  }

  .react-aria-ToggleButton {
    width: 32px;
  }
}

.react-aria-Separator {
  align-self: stretch;
  background-color: var(--border-color);

  &[aria-orientation=vertical] {
    width: 1px;
    margin: 0px 10px;
  }
}

.react-aria-Toolbar {
  .react-aria-Button, .react-aria-ToggleButton {
    --button-background-pressed: transparent;
    --border-color: transparent;
    --button-background-highlight: transparent;

    font-weight: normal;
    box-sizing: border-box;
    padding: 0;
    width: auto;
  }

  .toolbar-break {
    width: 100%;
  }
}

// Menu
.react-aria-Menu {
  max-height: inherit;
  box-sizing: border-box;
  overflow: auto;
  padding: 2px;
  min-width: 150px;
  box-sizing: border-box;
  outline: none;

  .react-aria-Separator {
    height: 1px;
    background: var(--border-color);
    margin: 2px 4px;
  }
}

.react-aria-MenuItem {
  margin: 2px;
  padding: 0.286rem 0.571rem;
  border-radius: 6px;
  outline: none;
  cursor: default;
  color: var(--text-color);
  font-size: 1.072rem;
  position: relative;
  display: grid;
  grid-template-areas: "label kbd"
                      "desc  kbd";
  align-items: center;
  column-gap: 20px;
  forced-color-adjust: none;

  &[data-focused] {
    background: var(--highlight-background);
    color: var(--highlight-foreground);
  }
}


// Dialog
.react-aria-Dialog {
  outline: none;
  padding: 30px;
  max-height: inherit;
  box-sizing: border-box;
  overflow: auto;

  .react-aria-Heading[slot=title] {
    line-height: 1em;
    margin-top: 0;
  }

  // Table
  .react-aria-Table {
    padding: 0.286rem;
    border: 1px solid var(--border-color);
    border-radius: 6px;
    background: var(--overlay-background);
    outline: none;
    border-spacing: 0;
    min-height: 100px;
    align-self: start;
    max-width: 100%;
    word-break: break-word;
    forced-color-adjust: none;

    &[data-focus-visible] {
      outline: 2px solid var(--focus-ring-color);
      outline-offset: -1px;
    }

    .react-aria-TableHeader {
      color: var(--text-color);

      &:after {
        content: '';
        display: table-row;
        height: 2px;
      }

      & tr:last-child .react-aria-Column {
        border-bottom: 1px solid var(--border-color);
        cursor: default;
      }
    }

    .react-aria-Row {
      --radius-top: 6px;
      --radius-bottom: 6px;
      --radius: var(--radius-top) var(--radius-top) var(--radius-bottom) var(--radius-bottom);
      border-radius: var(--radius);
      clip-path: inset(0 round var(--radius)); /* firefox */
      outline: none;
      cursor: default;
      color: var(--text-color);
      font-size: 1.072rem;
      position: relative;
      transform: scale(1);

      &[data-focus-visible] {
        outline: 2px solid var(--focus-ring-color);
        outline-offset: -2px;
      }

      &[data-pressed] {
        background: var(--gray-100);
      }

      &[data-selected] {
        background: var(--highlight-background);
        color: var(--highlight-foreground);
        --focus-ring-color: var(--highlight-foreground);

        &[data-focus-visible],
        .react-aria-Cell[data-focus-visible] {
          outline-offset: -4px;
        }
      }

      &[data-disabled] {
        color: var(--text-color-disabled);
      }
    }

    .react-aria-Cell,
    .react-aria-Column {
      padding: 4px 8px;
      text-align: left;
      outline: none;

      &[data-focus-visible] {
        outline: 2px solid var(--focus-ring-color);
        outline-offset: -2px;
      }
    }

    .react-aria-Cell {
      transform: translateZ(0);

      &:first-child {
        border-radius: var(--radius-top) 0 0 var(--radius-bottom);
      }

      &:last-child {
        border-radius: 0 var(--radius-top) var(--radius-bottom) 0;
      }
    }

    /* join selected items if :has selector is supported */
    @supports selector(:has(.foo)) {
      .react-aria-Row[data-selected]:has(+ [data-selected]),
      .react-aria-Row[data-selected]:has(+ .react-aria-DropIndicator + [data-selected]) {
        --radius-bottom: 0px;
      }

      .react-aria-Row[data-selected] + [data-selected],
      .react-aria-Row[data-selected] + .react-aria-DropIndicator + [data-selected] {
        --radius-top: 0px;
      }
    }
  }

  :where(.react-aria-Row) .react-aria-Checkbox {
    --selected-color: var(--highlight-foreground);
    --selected-color-pressed: var(--highlight-foreground-pressed);
    --checkmark-color: var(--highlight-background);
    --background-color: var(--highlight-background);
  }
}

.react-aria-ModalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: var(--visual-viewport-height);
  background: rgba(0 0 0 / .5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;

  &[data-entering] {
    animation: modal-fade 200ms;
  }

  &[data-exiting] {
    animation: modal-fade 150ms reverse ease-in;
  }
}

.react-aria-Modal {
  box-shadow: 0 8px 20px rgba(0 0 0 / 0.1);
  border-radius: 6px;
  background: var(--overlay-background);
  color: var(--text-color);
  border: 1px solid var(--gray-400);
  outline: none;
  max-width: 300px;

  &[data-entering] {
    animation: modal-zoom 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .react-aria-TextField {
    margin-bottom: 8px;
  }
}

@keyframes modal-fade {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes modal-zoom {
  from {
    transform: scale(0.8);
  }

  to {
    transform: scale(1);
  }
}


// breadcrumbs
.react-aria-Breadcrumbs {
  display: flex;
  align-items: center;
  list-style: none;
  padding: 0;
  font-size: 0.8rem;
  color: var(--text-color);
  margin: 0 0 1rem;

  li{
    font-size: 0.8rem;
  }


  .react-aria-Breadcrumb:not(:last-child)::after {
    content: '›';
    content: '›' / '';
    alt: ' ';
    padding: 0 5px;
  }

  .react-aria-Link {
    font-size: 0.8rem;
    color: var(--link-color-secondary);
    outline: none;
    position: relative;
    text-decoration: none;
    cursor: pointer;

    &[data-hovered] {
      text-decoration: underline;
    }

    &[data-current] {
      color: var(--text-color);
    }

    &[data-focus-visible]:after {
      content: '';
      position: absolute;
      inset: -2px -4px;
      border-radius: 6px;
      border: 2px solid var(--focus-ring-color);
    }
  }
}



.Filters{
  margin: 1rem 0;
}
