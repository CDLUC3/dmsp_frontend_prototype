@use '@/styles/responsive' as r;

@mixin layoutContainer {
  position: relative;
  width: 100%;
  overflow: auto;
  padding: var(--layout-container-padding, 0);
  background: var(--layout-container-background, transparent);
  color: var(--layout-container-color, var(--text-color));
  margin-bottom: 6rem;
}

@mixin contentContainer {
  position: relative;
  width: 100%;
  padding: var(--layout-content-padding, var(--brand-space2));
  background-color: var(--layout-content-background);
  color: var(--layout-content-color, var(--text-color));

  > :first-child {
    margin-top: 0;
  }
}

.layout-container {
  @include layoutContainer;
}

.layout-content-container,
.layout-sidebar-panel,
.layout-drawer-panel {
  @include contentContainer;
}

.layout-toolbar-container {
  @include layoutContainer;

  display: flex;
  flex-direction: row;
  gap: var(--layout-gap, 1em);
  align-items: center;

  >* {
    margin: 0;
  }
}

.layout-sidebar-panel,
.layout-drawer-panel,
.layout-drawer-modal .drawer-content {
  // TODO: Force 3d acceleration if available in browser
  transition: 0.3s ease-in-out;
}

.layout-drawer-panel.state-closed {
  * {
    visibility: hidden;
    pointer-events: none;
  }
}

.layout-sidebar-panel {
  &.state-closed {
    transition: visibility 0.1s 0.3s, opacity 0.1s 0.3s;
    visibility: hidden;
    opacity: 0;
  }

  &.state-open {
    visibility: visible;
    opacity: 1;
  }
}

.layout-drawer-modal {
  position: fixed;
  padding: 0;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden;
  z-index: 1000;
  background-color: rgb(0 0 0 / 75%);

  transition-behavior: allow-discrete;
  visibility: hidden;
  opacity: 0;

  .drawer-content {
    position: absolute;
    max-width: 100vw;
    width: max-content;
    height: 100vh;
    top: 0;
    background-color: white;
    display: flex;
    flex-direction: column;
    overflow: hidden; // Prevent the container itself from scrolling
  }

  &.state-closed {
    transition: visibility 0.1s 0.3s, opacity 0.1s 0.3s;
    visibility: hidden;
    opacity: 0;
  }

  &.state-open {
    visibility: visible;
    opacity: 1;
  }
}

.layout-with-panel {
  @include layoutContainer;
  position: relative;
  --_sidebar-width: 100%;

  width: 100%;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  gap: var(--layout-gap, var(--brand-space2));
  overflow-x: hidden;

  >.layout-content-container {
    flex-grow: 1;
  }

  @include r.device(md) {
    flex-direction: row;

    > {

      .layout-sidebar-panel,
      .layout-drawer-panel {
        flex-grow: 1;
        max-width: 30%;
      }

      .layout-content-container {
        max-width: calc(70% - var(--layout-gap, var(--brand-space2)));
        flex-grow: 4;

        &.layout-content-container-full {
          width: 100%;
          max-width: none;
        }
      }


    }
  }
}

.layout-drawer-panel {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  z-index: 10;
  background-color: white;
  padding: var(--space-5);
  transition: transform 0.3s ease-in-out;
  transform: translateX(100%); // hide offscreen
  display: flex;
  flex-direction: column;

  &.state-open {
    transform: translateX(0);
  }

  &.state-closed {
    transform: translateX(100%);
  }
}

// Add mask to rest of content when drawer panel is open
.layout-mask::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.4); // dim color
  z-index: 5;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease-in-out;
}

.layout-mask.drawer-open::before {
  // want to mask the content when the drawer is open
  opacity: 1;
  pointer-events: auto;
}

// Close button in the drawer panel
.close-action {
  background: #fff;
  color: #000;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  padding: 0.25rem;
  z-index: 21;
  transition: background 0.2s ease-in-out;

  // Disable the mobile tap highlight on mobile devices that usually remains where the 
  // 'close' button was even after the drawer panel closes
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;

  // Also disable any potential background color changes
  &:active {
    background: #f0f0f0;
  }

  &:hover {
    background: #f0f0f0;
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px var(--focus-ring, #3b82f6);
  }

  .dmp-icon {
    // override existing styles for dmp-icon because the icon, in this case, 
    //is sharing same position as the circle around it
    position: static !important;
    top: auto !important;
    right: auto !important;
    z-index: auto !important;
    fill: var(--text-color);
    color: var(--text-color);

    &:hover {
      fill: var(--blue-50);
    }
  }

}

.close-action-container {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: right;
  width: 100%;
}