@use '@/styles/responsive' as r;

.optionsDescription {
  font-size: var(--fs-sm);
  font-weight:600;
}

.searchField {
  display: grid;
  grid-template-areas:
  "label label"
  "input button"
  "help help";
  grid-template-columns: 1fr auto;
  max-width: 500px;
}

.searchLabel {
  grid-area: label;
}

.searchInput {
  grid-area: input;
  
}

.searchButton {
  grid-area: button;
  margin-left: 10px;
  width: fit-content;
}

.searchHelpText {
  grid-area: help;
  width: fit-content;
}

.optionsWrapper {
  border: 1px solid var(--border-color);
  padding: var(--space-4);
  margin-bottom: var(--space-4);
}

.questionFormField {
  height: 100px;
}

.dateRangeLabels {
  margin-bottom: 2rem;
}

.dateRangeInput {
  display: flex;
  flex-direction: column;
  flex: 1;
}

// Standard fields styles for research output questions
.fieldsContainer {
  margin-bottom: var(--space-4);
}

.fieldsDescription {
  font-size: var(--fs-sm);
  color: var(--text-secondary);
  margin-bottom: var(--space-3);
}

.fieldsList {
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-md);
  padding: var(--space-3);
  background: var(--bg-secondary);
}

.fieldRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--space-2) 0;
  position: relative;
}

.fieldDivider {
  height: 1px;
  border: none;
  background: var(--border-color);
  margin: 0;
}

.addFieldButton {
  margin-top: var(--space-3);
}

.fieldRow {
  margin-bottom: 1rem;

  .fieldPanel {
    margin-top: 0.5rem;
    margin-bottom: 2rem;
    padding: 1rem;
    background: #f9fafb;
    border-left: 3px solid var(--accent-color, #0070f3);
    border-radius: 8px;
  }
}

.fieldPanel {
  padding: 15px;
}

.tooltipWrapper {
  position: relative;
  display: inline-block;

  .tooltipText {
    visibility: hidden;
    opacity: 0;
    background-color: rgba(0, 0, 0, 0.85);
    color: #fff;
    text-align: center;
    padding: 5px 10px;
    border-radius: 6px;
    position: absolute;
    z-index: 1;
    top: 77%;
    left: 10px;
    transform: translateX(-50%);
    white-space: nowrap;
    font-size: 0.875rem;
    transition: opacity 0.15s, visibility 0.15s;
    pointer-events: none;

    &::after {
      content: "";
      position: absolute;
      bottom: 100%;
      left: 50%;
      margin-left: -5px;
      border-width: 5px;
      border-style: solid;
      border-color: transparent transparent rgba(0, 0, 0, 0.85) transparent;
    }
  }

  &:hover .tooltipText {
    visibility: visible;
    opacity: 1;
  }
}

// Output type configuration styles
.outputTypeConfig {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
  margin-bottom: 2rem;
}

.outputTypeModeSelector {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);

  select {
    padding: var(--space-2);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-sm);
    font-size: var(--fs-sm);
    background: white;
    min-width: 200px;
  }
}

.defaultOutputTypes, .customOutputTypes {
  fieldset {
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-sm);
    padding: var(--space-3);
    margin: 0;

    legend {
      font-weight: 600;
      padding: 0 var(--space-2);
      color: var(--text-primary);
    }
  }
}

.outputTypesList {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--space-2);
}

.outputTypeItem {
  display: flex;
  align-items: center;
  padding: var(--space-1);
}

.outputTypeWrapper {
  width: 100%;
}

.addLicenseTypeContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  width: 100%;
  align-items: center; // Keep Select and Button vertically aligned

  // By default (mobile): stack vertically
  > * {
    flex: 1 1 100%;
  }

  button {
    width: 100%; // full width on small screens
  }

  .licenseSelector {
    margin-bottom: 0;
  }
  // On larger screens, sit side-by-side
  @include r.device(sm) {
    flex-wrap: nowrap;
    align-items: center; // Ensure vertical alignment

    button {
      flex: 0 0 auto; // natural width
      width: auto;
    }

        .licenseSelector {
      margin-bottom: 2rem !important; // Override for desktop
    }

  }
}

.addOutputTypeContainer {
  display: flex;
  gap: var(--space-2);
  align-items: center;
  margin-bottom: var(--space-3);

  input {
    flex: 1;
    padding: var(--space-2);
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius-sm);
    font-size: var(--fs-sm);
  }

  button {
    padding: var(--space-2) var(--space-3);
    white-space: nowrap;
  }
}

.customOutputTypesList {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.customOutputTypeItem {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: var(--space-2);
  background: white;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-sm);

  span {
    flex: 1;
  }
}

.removeButton {
  padding: 4px 12px;
}

/* Bullet list for 'Use defaults' mode */
.bulletList {
  list-style: disc;
  padding-left: 1.5rem;
  li {
    display: list-item;
    padding: var(--space-1) 0;
  }
}

/* Deletable list style for 'Use mine' mode */
.deletableList {
  list-style: none;
  padding: 0;
  margin: 0;
}

/* Data flags configuration styles */
.dataFlagsConfig {
  margin-bottom: var(--space-4);
}

.dataFlagsPreview {
  margin-top: var(--space-4);
  padding: var(--space-3);
  background-color: var(--surface-secondary);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
}

.dataFlagsPreview h4 {
  margin-top: 0;
  margin-bottom: var(--space-2);
  font-size: var(--fs-sm);
  color: var(--text-secondary);
}

.flagsPreviewContainer {
  display: flex;
  flex-direction: column;
  gap: var(--space-2);
}

.flagPreview {
  display: flex;
  align-items: center;
  gap: var(--space-2);
  font-size: var(--fs-sm);
  color: var(--text-muted);
  cursor: not-allowed;
}

.flagPreview input[type="checkbox"] {
  margin: 0;
  cursor: not-allowed;
}